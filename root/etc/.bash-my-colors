##
# .bash-my-colors
# A PS1 adjustment script
# sourced somewhere in your bash_profile chain.

#########################
# Adjust your colors here, set different on each server to differ
# see file etc/.bash_colours as reference
#
# For a host that you use screen on, the bold is the nicer output, hence why 
# it is used on the screen (else) portion of the following condition. 
# This helps you notice if you've actually made your last screen yet, by being
# underlined still. 
# e.g. MY_PATH_PROMPT_COLOR@MY_HOST_COLOR or through screen (tmux, etc) MY_PATH_PROMPT_COLOR@MY_SCREEN_HOST_COLOR  
#
# Always run screen with the -RA switch 'screen -RA', or screen-RAD if your wanting 
#   to detach from another system first incase you have switched consoles. The -A 
#   switch is key to keeping any alignment you may have had on the screen splits, 
#   through a jump, prior to disconnect, when using split vertical screens.  
#   Note the alias for this is `srad` so if you give the session a name of tab1 for
#    example you just issue the easily remembered command `srad tab1` for your first
#    session, or even shorter call it t1, e.g. `srad t1`.  The 2nd session can be 
#    called `srad t2`, etc...   when you detach, you can rejoin the same way 
#    (`srad t2` etc..).   
#
# By Default, try to use the following as a guideline, customizing from there
# Personal=Green
# Dev=Green
# Stage=Yellow
# PRE-PROD=Red
# PROD=BRed
# Etc..
#########################
MY_BASE_USER_COLOR="${Red}"
MY_AT_COLOR="${Red}"
MY_HOST_COLOR="${Red}"
MY_SCREEN_HOST_COLOR="${UBRed}"
MY_PATH_PROMPT_COLOR="${BRed}"
#########################

##
# Rebuild the PS1 (customize PS1 and add the colors)
# Only need to adjust below if you want to restructure the PS1 and its symbols  
#
# ResetColor is used at end of each, incase you choose to use a bold, bright, or
#  underlined color, this will help reset the attribute so that it doesnt persist
#
# coloring the location prompt
LOCATION_STRING=" ${MY_PATH_PROMPT_COLOR}\w${ResetColor}"
# coloring the git branch prompt
BRANCH='$(__git_ps1 " [%s]")'
# coloring the displayed path and cursor prompt (default is $)
PROMPT="${MY_PATH_PROMPT_COLOR}\$${ResetColor}" 
# coloring your username as logged in, including roots when rooted
USER_STRING="${MY_BASE_USER_COLOR}\u${ResetColor}"
# coloring the symbol between the username and hostname (default is an @)
AT_STRING="${MY_AT_COLOR}@${ResetColor}"
# coloring all remaining bash output (after your color prompts)  (default is a reset)
BASH_OUTPUT_COLOR="${ResetColor} "


#
if [ ! -z $STY ]; then
  # is screen promptm switch to our screen vars instead
  TERM_BASE=$SCREEN_TERM_BASE
  HOST_STRING=$SCREEN_HOST_STRING
  MY_HOST_COLOR=$MY_SCREEN_HOST_COLOR
fi
HOST_STRING="${MY_HOST_COLOR}\h${ResetColor}"
TERM_BASE="${USER_STRING}${AT_STRING}${HOST_STRING}"

# two ways to color the git branch, use `git_parse_branch`, or b `__git_ps1`
# Using git_parse_branch (dependency, needs git_parse_branch script)
# export PS1=$TERM_BASE$LOCATION_STRING$IBlack$(git_parse_branch)$PROMPT$BASH_OUTPUT_COLOR
#
# Using __git_ps1
export PS1=$TERM_BASE$LOCATION_STRING$IBlack$BRANCH$PROMPT$BASH_OUTPUT_COLOR

##
# dircolors customizations
# For FreeBSD and Mac, dircolors
# enables colored output for dirs
export CLICOLOR=1
#
# color configuration for dirs
export LSCOLORS=GxFxCxDxBxegedabagaced
#
